984553 function calls (853132 primitive calls) in 0.388 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 1653/188    0.061    0.000    0.206    0.001 assumptions.py:509(_ask)
    35255    0.026    0.000    0.054    0.000 random.py:354(shuffle)
    39232    0.016    0.000    0.025    0.000 random.py:245(_randbelow_with_getrandbits)
    97211    0.013    0.000    0.013    0.000 {method 'get' of 'dict' objects}
10883/1225    0.012    0.000    0.026    0.000 basic.py:677(free_symbols)
    10657    0.010    0.000    0.020    0.000 sympify.py:124(sympify)
  1168/18    0.010    0.000    0.356    0.020 function.py:1260(_new_)
79909/78220    0.009    0.000    0.011    0.000 {built-in method builtins.isinstance}
33809/9196    0.009    0.000    0.010    0.000 traversal.py:250(postorder_traversal)
    36954    0.008    0.000    0.008    0.000 {method 'update' of 'set' objects}
45126/1426    0.008    0.000    0.207    0.000 assumptions.py:497(getit)
  413/385    0.008    0.000    0.148    0.000 mul.py:205(flatten)
 9190/554    0.007    0.000    0.357    0.001 cache.py:69(wrapper)
      836    0.007    0.000    0.036    0.000 basic.py:2156(is_same)
    60978    0.007    0.000    0.007    0.000 basic.py:906(args)
13194/12697    0.006    0.000    0.015    0.000 basic.py:497(_eq_)
    37316    0.005    0.000    0.005    0.000 {method 'extend' of 'list' objects}
    22366    0.005    0.000    0.022    0.000 {built-in method builtins.getattr}
24656/3100    0.005    0.000    0.024    0.000 basic.py:725(<genexpr>)
  651/605    0.005    0.000    0.163    0.000 operations.py:62(_new_)
    62266    0.005    0.000    0.005    0.000 {method 'getrandbits' of '_random.Random' objects}
     6680    0.004    0.000    0.006    0.000 basic.py:478(_do_eq_sympify)
45205/44834    0.004    0.000    0.004    0.000 {built-in method builtins.len}
    39232    0.004    0.000    0.004    0.000 {method 'bit_length' of 'int' objects}
      822    0.004    0.000    0.009    0.000 mul.py:483(_gather)
 4380/213    0.003    0.000    0.019    0.000 basic.py:1766(walk)
   831/15    0.003    0.000    0.353    0.024 function.py:1930(_derivative_dispatch)
16558/14726    0.003    0.000    0.004    0.000 basic.py:315(_hash_)
      525    0.003    0.000    0.018    0.000 radsimp.py:1050(fraction)
5844/4362    0.003    0.000    0.059    0.000 logic.py:43(_fuzzy_group)
     1533    0.002    0.000    0.006    0.000 mul.py:1601(_eval_pos_neg)
     1394    0.002    0.000    0.008    0.000 containers.py:54(_new_)
  1590/30    0.002    0.000    0.016    0.001 basic.py:1364(_xreplace)
     1300    0.002    0.000    0.008    0.000 function.py:1694(free_symbols)
     5469    0.002    0.000    0.017    0.000 sympify.py:514(_sympify)
     1374    0.002    0.000    0.003    0.000 function.py:506(class_key)
    10885    0.002    0.000    0.002    0.000 {method 'union' of 'set' objects}
     1217    0.002    0.000    0.006    0.000 mul.py:1411(_eval_is_integer)
     3066    0.002    0.000    0.012    0.000 numbers.py:1945(_eq_)
2673/2618    0.002    0.000    0.127    0.000 {built-in method builtins.any}
     2668    0.002    0.000    0.003    0.000 <frozen importlib._bootstrap>:1390(_handle_fromlist)
     6138    0.002    0.000    0.003    0.000 symbol.py:446(free_symbols)
2698/1384    0.002    0.000    0.003    0.000 expr.py:432(is_number)
    13156    0.002    0.000    0.002    0.000 {built-in method builtins.hasattr}
    11507    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
     1041    0.002    0.000    0.004    0.000 mul.py:1296(_eval_is_zero_infinite_helper)
     2676    0.001    0.000    0.002    0.000 basic.py:288(_new_)
     4380    0.001    0.000    0.014    0.000 basic.py:1787(rec_replace)
    54/14    0.001    0.000    0.287    0.020 mul.py:989(_eval_derivative_n_times)
     4122    0.001    0.000    0.002    0.000 containers.py:72(_iter_)
1402/1374    0.001    0.000    0.022    0.000 numbers.py:1907(_mul_)
      113    0.001    0.000    0.005    0.000 add.py:197(flatten)
     1809    0.001    0.000    0.004    0.000 mul.py:1390(_eval_is_rational)
     5820    0.001    0.000    0.002    0.000 numbers.py:1991(_hash_)
     2224    0.001    0.000    0.010    0.000 numbers.py:1602(_eq_)
 1073/717    0.001    0.000    0.004    0.000 basic.py:366(compare)
     1047    0.001    0.000    0.002    0.000 operations.py:118(_from_args)
6961/6330    0.001    0.000    0.002    0.000 {built-in method builtins.hash}
      563    0.001    0.000    0.002    0.000 basic.py:2117(_exec_constructor_postprocessors)
      958    0.001    0.000    0.001    0.000 numbers.py:779(_new_)
     3222    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap>:645(parent)
3313/1971    0.001    0.000    0.004    0.000 {built-in method builtins.all}
     4170    0.001    0.000    0.004    0.000 containers.py:56(<genexpr>)
   786/10    0.001    0.000    0.353    0.035 expr.py:3604(diff)
      957    0.001    0.000    0.002    0.000 basic.py:88(_cmp_name)
     6737    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
     2868    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
      397    0.001    0.000    0.001    0.000 facts.py:599(deduce_all_facts)
   249/12    0.001    0.000    0.045    0.004 basic.py:1248(fallback)
     1188    0.001    0.000    0.001    0.000 add.py:451(as_coeff_Add)
  288/270    0.001    0.000    0.022    0.000 add.py:766(_eval_is_extended_positive)
      959    0.001    0.000    0.002    0.000 mul.py:1681(_eval_is_composite)
  286/262    0.001    0.000    0.023    0.000 add.py:850(_eval_is_extended_negative)
     1202    0.001    0.000    0.001    0.000 {method 'index' of 'list' objects}
     1625    0.001    0.000    0.001    0.000 exponential.py:213(_instancecheck_)
      213    0.001    0.000    0.024    0.000 basic.py:1542(replace)
     3222    0.001    0.000    0.001    0.000 {method 'rpartition' of 'str' objects}
      506    0.001    0.000    0.003    0.000 function.py:1512(_sort_variable_count)
      919    0.001    0.000    0.005    0.000 numbers.py:3126(_eq_)
       88    0.001    0.000    0.001    0.000 relational.py:1422(is_eq)
     4260    0.001    0.000    0.001    0.000 function.py:1492(<lambda>)
     3132    0.001    0.000    0.001    0.000 mul.py:1391(<genexpr>)
     1074    0.001    0.000    0.002    0.000 containers.py:100(_eq_)
      589    0.001    0.000    0.003    0.000 function.py:930(_eq_)
2976/1546    0.001    0.000    0.002    0.000 expr.py:482(<genexpr>)
      919    0.001    0.000    0.004    0.000 numbers.py:3292(_eq_)
      298    0.001    0.000    0.010    0.000 function.py:1507(canonical)
     3648    0.001    0.000    0.001    0.000 power.py:121(base)
      395    0.001    0.000    0.004    0.000 {method 'sort' of 'list' objects}
     6790    0.001    0.000    0.001    0.000 basic.py:208(_sympy_)
      318    0.001    0.000    0.002    0.000 mul.py:1497(_eval_real_imag)
     2724    0.001    0.000    0.001    0.000 {built-in method _new_ of type object at 0x00007FFC55DC28A0}
      525    0.001    0.000    0.018    0.000 mul.py:1669(_eval_is_even)
      552    0.001    0.000    0.001    0.000 numbers.py:1887(_sub_)
     1120    0.001    0.000    0.001    0.000 mul.py:1549(_eval_herm_antiherm)
     1674    0.001    0.000    0.001    0.000 function.py:1935(<genexpr>)
      556    0.001    0.000    0.004    0.000 mul.py:390(<genexpr>)
     3867    0.001    0.000    0.001    0.000 inspect.py:758(getmro)
     2079    0.001    0.000    0.001    0.000 facts.py:582(_tell)
     1374    0.001    0.000    0.001    0.000 function.py:226(nargs)
  296/122    0.001    0.000    0.002    0.000 sorting.py:202(ordered)
     2546    0.001    0.000    0.001    0.000 operations.py:73(<genexpr>)
      255    0.000    0.000    0.004    0.000 add.py:661(_eval_is_imaginary)
      852    0.000    0.000    0.001    0.000 sympify.py:78(_is_numpy_instance)
      599    0.000    0.000    0.002    0.000 mul.py:1287(_eval_is_complex)
4182/4172    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      593    0.000    0.000    0.002    0.000 mul.py:1399(_eval_is_algebraic)
   300/12    0.000    0.000    0.046    0.004 basic.py:1176(_subs)
     1558    0.000    0.000    0.000    0.000 sympify.py:28(_init_)
  363/278    0.000    0.000    0.031    0.000 decorators.py:236(_func)
      227    0.000    0.000    0.014    0.000 add.py:689(_eval_is_zero)
       44    0.000    0.000    0.004    0.000 expr.py:4006(_eval_derivative_n_times)
      213    0.000    0.000    0.006    0.000 power.py:433(_eval_is_extended_negative)
    97/16    0.000    0.000    0.292    0.018 basic.py:1963(_eval_derivative_n_times)
  264/195    0.000    0.000    0.043    0.000 add.py:730(_eval_is_odd)
      595    0.000    0.000    0.001    0.000 mul.py:1569(_eval_is_irrational)
      412    0.000    0.000    0.001    0.000 assumptions.py:469(_init_)
      881    0.000    0.000    0.001    0.000 {built-in method builtins.abs}
    146/9    0.000    0.000    0.001    0.000 {built-in method _abc._abc_subclasscheck}
     2556    0.000    0.000    0.000    0.000 sympify.py:84(<genexpr>)
     1086    0.000    0.000    0.000    0.000 power.py:803(as_base_exp)
     1655    0.000    0.000    0.000    0.000 function.py:1686(variable_count)
       37    0.000    0.000    0.004    0.000 power.py:136(_new_)
  370/277    0.000    0.000    0.030    0.000 decorators.py:111(binary_op_wrapper)
      749    0.000    0.000    0.001    0.000 operations.py:452(make_args)
      258    0.000    0.000    0.001    0.000 function.py:927(_hash_)
      614    0.000    0.000    0.003    0.000 mul.py:1639(_eval_is_odd)
     2323    0.000    0.000    0.000    0.000 expr.py:185(_hashable_content)
      509    0.000    0.000    0.001    0.000 operations.py:135(_new_rawargs)
      256    0.000    0.000    0.001    0.000 mul.py:844(as_coeff_Mul)
      412    0.000    0.000    0.001    0.000 assumptions.py:481(copy)
       54    0.000    0.000    0.000    0.000 multinomial.py:55(multinomial_coefficients)
      361    0.000    0.000    0.001    0.000 mul.py:1539(_eval_is_imaginary)
     1050    0.000    0.000    0.001    0.000 mul.py:1400(<genexpr>)
      176    0.000    0.000    0.000    0.000 dispatcher.py:231(_call_)
     1049    0.000    0.000    0.001    0.000 mul.py:1288(<genexpr>)
      776    0.000    0.000    0.003    0.000 mul.py:1583(_eval_is_extended_positive)
      580    0.000    0.000    0.003    0.000 mul.py:1363(_eval_is_zero)
      757    0.000    0.000    0.004    0.000 mul.py:1636(_eval_is_extended_negative)
      561    0.000    0.000    0.000    0.000 containers.py:60(_getitem_)
      125    0.000    0.000    0.001    0.000 expr.py:895(_eval_is_extended_positive_negative)
       44    0.000    0.000    0.001    0.000 piecewise.py:131(_new_)
      716    0.000    0.000    0.001    0.000 mul.py:1543(_eval_is_hermitian)
      335    0.000    0.000    0.006    0.000 add.py:627(<lambda>)
      282    0.000    0.000    0.006    0.000 add.py:643(<lambda>)
       22    0.000    0.000    0.002    0.000 sets.py:1982(_new_)
      599    0.000    0.000    0.000    0.000 mul.py:1540(<genexpr>)
  309/285    0.000    0.000    0.005    0.000 add.py:835(_eval_is_extended_nonpositive)
  297/275    0.000    0.000    0.005    0.000 add.py:820(_eval_is_extended_nonnegative)
      335    0.000    0.000    0.005    0.000 add.py:637(<lambda>)
       22    0.000    0.000    0.004    0.000 function.py:294(_new_)
      669    0.000    0.000    0.000    0.000 containers.py:66(_len_)
  600/210    0.000    0.000    0.000    0.000 traversal.py:117(_preorder_traversal)
     1675    0.000    0.000    0.000    0.000 function.py:1661(expr)
      285    0.000    0.000    0.006    0.000 add.py:631(<lambda>)
      187    0.000    0.000    0.000    0.000 add.py:645(<lambda>)
      232    0.000    0.000    0.001    0.000 multinomial.py:129(multinomial_coefficients_iterator)
      200    0.000    0.000    0.000    0.000 numbers.py:1878(_radd_)
      461    0.000    0.000    0.001    0.000 mul.py:1375(_eval_is_infinite)
       93    0.000    0.000    0.001    0.000 power.py:404(_eval_is_extended_positive)
       65    0.000    0.000    0.016    0.000 power.py:1277(_eval_is_algebraic)
      344    0.000    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
      249    0.000    0.000    0.000    0.000 add.py:629(<lambda>)
      261    0.000    0.000    0.006    0.000 add.py:639(<lambda>)
       88    0.000    0.000    0.002    0.000 relational.py:625(_new_)
  239/210    0.000    0.000    0.025    0.000 add.py:635(<lambda>)
      335    0.000    0.000    0.003    0.000 add.py:648(_eval_is_infinite)
      258    0.000    0.000    0.006    0.000 add.py:641(<lambda>)
      255    0.000    0.000    0.001    0.000 add.py:633(<lambda>)
       93    0.000    0.000    0.000    0.000 mul.py:1698(_eval_subs)
    60/10    0.000    0.000    0.001    0.000 exprtools.py:1222(do)
      904    0.000    0.000    0.000    0.000 power.py:125(exp)
   195/16    0.000    0.000    0.299    0.019 function.py:1921(_dispatch_eval_derivative_n_times)
      372    0.000    0.000    0.116    0.000 mul.py:708(<genexpr>)
      412    0.000    0.000    0.000    0.000 facts.py:579(_init_)
      469    0.000    0.000    0.002    0.000 basic.py:539(_ne_)
      272    0.000    0.000    0.005    0.000 add.py:737(_eval_is_irrational)
       56    0.000    0.000    0.002    0.000 power.py:1250(_eval_is_rational)
       88    0.000    0.000    0.001    0.000 piecewise.py:22(_new_)
      181    0.000    0.000    0.000    0.000 numbers.py:1677(_hash_)
    38/28    0.000    0.000    0.008    0.000 function.py:600(_eval_derivative)
      877    0.000    0.000    0.000    0.000 expr.py:2053(as_base_exp)
      729    0.000    0.000    0.000    0.000 numbers.py:1840(_abs_)
      741    0.000    0.000    0.000    0.000 mul.py:1284(<genexpr>)
       64    0.000    0.000    0.000    0.000 trigonometric.py:59(_eval_is_algebraic)
     1041    0.000    0.000    0.000    0.000 numbers.py:1741(as_coeff_Mul)
      239    0.000    0.000    0.000    0.000 numbers.py:545(_hash_)
    64/60    0.000    0.000    0.000    0.000 sorting.py:179(_nodes)
      220    0.000    0.000    0.002    0.000 numbers.py:1955(_gt_)
      246    0.000    0.000    0.000    0.000 misc.py:501(as_int)
       76    0.000    0.000    0.001    0.000 power.py:458(_eval_is_zero)
       16    0.000    0.000    0.046    0.003 power.py:1219(_eval_derivative)
      115    0.000    0.000    0.000    0.000 numbers.py:1918(_rmul_)
       22    0.000    0.000    0.004    0.000 function.py:452(new)
       60    0.000    0.000    0.002    0.000 power.py:581(_eval_is_imaginary)
    41/10    0.000    0.000    0.290    0.029 add.py:502(_eval_derivative)
       58    0.000    0.000    0.000    0.000 power.py:503(_eval_is_extended_real)
      149    0.000    0.000    0.001    0.000 expr.py:241(_sub_)
       10    0.000    0.000    0.046    0.005 basic.py:965(subs)
      318    0.000    0.000    0.002    0.000 mul.py:1494(_eval_is_extended_real)
      404    0.000    0.000    0.000    0.000 mul.py:1546(_eval_is_antihermitian)
    64/60    0.000    0.000    0.000    0.000 sorting.py:10(default_sort_key)
      282    0.000    0.000    0.003    0.000 mul.py:34(_mulsort)
      157    0.000    0.000    0.001    0.000 mul.py:1284(<lambda>)
      379    0.000    0.000    0.005    0.000 add.py:628(<genexpr>)
       18    0.000    0.000    0.001    0.000 expr.py:1386(coeff)
      344    0.000    0.000    0.001    0.000 <frozen abc>:117(_instancecheck_)
      124    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
      379    0.000    0.000    0.005    0.000 add.py:638(<genexpr>)
      326    0.000    0.000    0.005    0.000 add.py:644(<genexpr>)
       20    0.000    0.000    0.000    0.000 basic.py:601(atoms)
       62    0.000    0.000    0.000    0.000 numbers.py:1866(_add_)
      106    0.000    0.000    0.000    0.000 numbers.py:1718(as_numer_denom)
       11    0.000    0.000    0.002    0.000 function.py:1706(_eval_subs)
      329    0.000    0.000    0.005    0.000 add.py:632(<genexpr>)
       14    0.000    0.000    0.001    0.000 exponential.py:660(eval)
      302    0.000    0.000    0.005    0.000 add.py:642(<genexpr>)
      758    0.000    0.000    0.000    0.000 basic.py:880(func)
       32    0.000    0.000    0.000    0.000 sdm.py:78(_init_)
      305    0.000    0.000    0.005    0.000 add.py:640(<genexpr>)
    85/50    0.000    0.000    0.021    0.000 decorators.py:69(__sympifyit_wrapper)
      960    0.000    0.000    0.000    0.000 basic.py:324(_hashable_content)
  283/249    0.000    0.000    0.024    0.000 add.py:636(<genexpr>)
      276    0.000    0.000    0.009    0.000 function.py:1493(<lambda>)
      276    0.000    0.000    0.009    0.000 basic.py:1756(<lambda>)
      601    0.000    0.000    0.000    0.000 add.py:645(<genexpr>)
      621    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      255    0.000    0.000    0.000    0.000 add.py:634(<genexpr>)
      293    0.000    0.000    0.000    0.000 add.py:630(<genexpr>)
       64    0.000    0.000    0.001    0.000 power.py:482(_eval_is_integer)
       20    0.000    0.000    0.003    0.000 add.py:465(_eval_power)
       36    0.000    0.000    0.000    0.000 sets.py:125(_infimum_key)
       14    0.000    0.000    0.001    0.000 expr.py:2247(extract_multiplicatively)
       50    0.000    0.000    0.001    0.000 power.py:573(_eval_is_complex)
      627    0.000    0.000    0.000    0.000 numbers.py:2813(_bool_)
       36    0.000    0.000    0.000    0.000 basic.py:737(as_dummy)
      176    0.000    0.000    0.000    0.000 core.py:13(dispatch)
      768    0.000    0.000    0.000    0.000 symbol.py:280(_diff_wrt)
       36    0.000    0.000    0.000    0.000 expr.py:1323(args_cnc)
        8    0.000    0.000    0.001    0.000 trigonometric.py:33(_imaginary_unit_as_coefficient)
       67    0.000    0.000    0.001    0.000 power.py:630(_eval_is_odd)
       19    0.000    0.000    0.000    0.000 repmatrix.py:948(_getitem_RepMatrix)
      312    0.000    0.000    0.000    0.000 boolalg.py:480(<lambda>)
       10    0.000    0.000    0.001    0.000 simplify.py:355(signsimp)
       44    0.000    0.000    0.000    0.000 piecewise.py:156(eval)
       51    0.000    0.000    0.005    0.000 power.py:639(_eval_is_finite)
       86    0.000    0.000    0.023    0.000 expr.py:251(_mul_)
      232    0.000    0.000    0.000    0.000 symbol.py:410(_hashable_content)
       32    0.000    0.000    0.020    0.001 numbers.py:1469(_mul_)
      265    0.000    0.000    0.000    0.000 {built-in method _operator.index}
      180    0.000    0.000    0.000    0.000 containers.py:110(_hash_)
       35    0.000    0.000    0.000    0.000 trigonometric.py:51(_eval_is_rational)
        4    0.000    0.000    0.259    0.065 matrixbase.py:3795(_handle_creation_inputs)
       65    0.000    0.000    0.014    0.000 power.py:1278(_is_one)
      429    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
    64/60    0.000    0.000    0.000    0.000 sorting.py:168(_node_count)
       16    0.000    0.000    0.000    0.000 power.py:674(_eval_subs)
      210    0.000    0.000    0.000    0.000 {built-in method builtins.next}
        3    0.000    0.000    0.000    0.000 basic.py:1507(_has)
      113    0.000    0.000    0.001    0.000 add.py:40(_addsort)
      119    0.000    0.000    0.000    0.000 power.py:662(_eval_is_composite)
       18    0.000    0.000    0.001    0.000 trigonometric.py:131(_peeloff_pi)
      217    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      111    0.000    0.000    0.000    0.000 traversal.py:12(iterargs)
       59    0.000    0.000    0.005    0.000 power.py:394(_eval_is_even)
       14    0.000    0.000    0.000    0.000 exponential.py:914(_eval_is_algebraic)
      112    0.000    0.000    0.005    0.000 power.py:398(_eval_is_negative)
      119    0.000    0.000    0.000    0.000 power.py:655(_eval_is_prime)
       10    0.000    0.000    0.000    0.000 symbol.py:494(_new_)
      411    0.000    0.000    0.000    0.000 function.py:371(func)
       68    0.000    0.000    0.000    0.000 expr.py:937(_eval_is_extended_negative)
       10    0.000    0.000    0.001    0.000 cse_opts.py:10(sub_pre)
      210    0.000    0.000    0.000    0.000 traversal.py:160(_next_)
       30    0.000    0.000    0.003    0.000 expr.py:287(_truediv_)
       36    0.000    0.000    0.000    0.000 logic.py:115(fuzzy_and)
       63    0.000    0.000    0.001    0.000 expr.py:256(_rmul_)
       22    0.000    0.000    0.001    0.000 function.py:765(fdiff)
       58    0.000    0.000    0.000    0.000 numbers.py:3123(_hash_)
        1    0.000    0.000    0.388    0.388 {built-in method builtins.exec}
        4    0.000    0.000    0.001    0.000 trigonometric.py:606(eval)
        1    0.000    0.000    0.388    0.388 lagrange.py:174(form_lagranges_equations)
       34    0.000    0.000    0.000    0.000 numbers.py:432(_eval_subs)
      273    0.000    0.000    0.000    0.000 boolalg.py:446(_eq_)
      177    0.000    0.000    0.000    0.000 function.py:1917(_get_zero_with_shape_like)
       81    0.000    0.000    0.007    0.000 exprtools.py:34(_monotonic_sign)
       14    0.000    0.000    0.000    0.000 exponential.py:904(_eval_is_rational)
       10    0.000    0.000    0.001    0.000 function.py:1611(_eval_derivative)
      186    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 symbol.py:359(_xnew_)
        4    0.000    0.000    0.259    0.065 repmatrix.py:569(_new)
       60    0.000    0.000    0.000    0.000 iterables.py:3025(iterable)
       22    0.000    0.000    0.004    0.000 function.py:821(_new_)
       72    0.000    0.000    0.000    0.000 trigonometric.py:168(_pi_coeff)
        3    0.000    0.000    0.126    0.042 matrixbase.py:2034(_eval_applyfunc)
       10    0.000    0.000    0.000    0.000 cse_opts.py:41(sub_post)
      155    0.000    0.000    0.000    0.000 numbers.py:2849(_neg_)
       57    0.000    0.000    0.000    0.000 expr.py:934(_eval_is_extended_positive)
        6    0.000    0.000    0.004    0.001 function.py:1631(doit)
    146/9    0.000    0.000    0.001    0.000 <frozen abc>:121(_subclasscheck_)
      132    0.000    0.000    0.000    0.000 relational.py:1571(<genexpr>)
       22    0.000    0.000    0.000    0.000 function.py:616(_eval_is_commutative)
        7    0.000    0.000    0.000    0.000 domainmatrix.py:138(_new_)
       32    0.000    0.000    0.000    0.000 domainmatrix.py:225(from_rep)
       88    0.000    0.000    0.000    0.000 basic.py:32(as_Basic)
       12    0.000    0.000    0.000    0.000 sdm.py:215(copy)
       88    0.000    0.000    0.000    0.000 piecewise.py:46(cond)
        7    0.000    0.000    0.000    0.000 repmatrix.py:183(_dod_to_DomainMatrix)
      167    0.000    0.000    0.000    0.000 numbers.py:1994(_index_)
       49    0.000    0.000    0.000    0.000 domain.py:846(_eq_)
        6    0.000    0.000    0.000    0.000 basic.py:1927(doit)
       36    0.000    0.000    0.000    0.000 numbers.py:3576(_hash_)
        4    0.000    0.000    0.000    0.000 repmatrix.py:209(_flat_list_to_DomainMatrix)
       20    0.000    0.000    0.000    0.000 <frozen _collections_abc>:108(_check_methods)
       47    0.000    0.000    0.000    0.000 function.py:935(_ne_)
       88    0.000    0.000    0.000    0.000 facts.py:633(<genexpr>)
       14    0.000    0.000    0.000    0.000 exponential.py:928(_eval_is_complex)
       50    0.000    0.000    0.001    0.000 power.py:578(<genexpr>)
       30    0.000    0.000    0.016    0.001 basic.py:1299(xreplace)
    69/65    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       21    0.000    0.000    0.000    0.000 function.py:1665(_wrt_variables)
       17    0.000    0.000    0.020    0.001 numbers.py:475(_mul_)
       22    0.000    0.000    0.000    0.000 function.py:482(_should_evalf)
       24    0.000    0.000    0.000    0.000 trigonometric.py:904(_eval_is_complex)
        8    0.000    0.000    0.000    0.000 trigonometric.py:600(fdiff)
        4    0.000    0.000    0.000    0.000 immutable.py:122(_fromrep)
       14    0.000    0.000    0.001    0.000 expr.py:1690(as_coefficient)
        4    0.000    0.000    0.000    0.000 trigonometric.py:300(eval)
       10    0.000    0.000    0.000    0.000 symbol.py:294(_sanitize)
      129    0.000    0.000    0.000    0.000 mul.py:706(<genexpr>)
       96    0.000    0.000    0.000    0.000 numbers.py:2845(_abs_)
       29    0.000    0.000    0.000    0.000 function.py:1608(_eval_is_commutative)
       60    0.000    0.000    0.000    0.000 logic.py:92(fuzzy_bool)
       10    0.000    0.000    0.001    0.000 exprtools.py:1161(factor_terms)
       12    0.000    0.000    0.000    0.000 domainmatrix.py:503(copy)
    49/39    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       40    0.000    0.000    0.000    0.000 add.py:904(_eval_subs)
       14    0.000    0.000    0.009    0.001 exponential.py:938(_eval_is_extended_positive)
        6    0.000    0.000    0.000    0.000 function.py:836(_new_)
       22    0.000    0.000    0.000    0.000 function.py:265(_valid_nargs)
       44    0.000    0.000    0.000    0.000 relational.py:1524(<genexpr>)
        3    0.000    0.000    0.000    0.000 repmatrix.py:223(_smat_to_DomainMatrix)
       60    0.000    0.000    0.003    0.000 add.py:468(<genexpr>)
       86    0.000    0.000    0.000    0.000 sdm.py:85(<genexpr>)
       14    0.000    0.000    0.008    0.001 exponential.py:944(_eval_is_extended_nonnegative)
        8    0.000    0.000    0.259    0.032 matrixbase.py:3507(<lambda>)
      176    0.000    0.000    0.000    0.000 relational.py:1239(_eval_is_eq)
       32    0.000    0.000    0.000    0.000 trigonometric.py:537(_eval_is_finite)
       13    0.000    0.000    0.000    0.000 trigonometric.py:909(_eval_is_zero)
       12    0.000    0.000    0.000    0.000 domainmatrix.py:506(convert_to)
       60    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       23    0.000    0.000    0.000    0.000 sdm.py:186(new)
       14    0.000    0.000    0.000    0.000 numbers.py:1430(_add_)
        3    0.000    0.000    0.259    0.086 matrixbase.py:3451(jacobian)
       23    0.000    0.000    0.000    0.000 trigonometric.py:547(_eval_is_complex)
       64    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       16    0.000    0.000    0.000    0.000 repmatrix.py:585(_fromrep)
        3    0.000    0.000    0.000    0.000 sdm.py:1401(binop_dict)
       19    0.000    0.000    0.000    0.000 repmatrix.py:335(_getitem_)
      132    0.000    0.000    0.000    0.000 wrapper.py:106(_new_)
       16    0.000    0.000    0.000    0.000 numbers.py:1427(_neg_)
       60    0.000    0.000    0.000    0.000 simplify.py:411(<lambda>)
        8    0.000    0.000    0.000    0.000 evalf.py:150(pure_complex)
        1    0.000    0.000    0.094    0.094 matexpr.py:550(_matrix_derivative_old_algorithm)
       19    0.000    0.000    0.000    0.000 sdm.py:88(getitem)
        6    0.000    0.000    0.004    0.001 function.py:1226(_diff_wrt)
       14    0.000    0.000    0.000    0.000 exponential.py:941(_eval_is_zero)
       30    0.000    0.000    0.000    0.000 domain.py:851(_ne_)
       10    0.000    0.000    0.000    0.000 numbers.py:1846(_divmod_)
       14    0.000    0.000    0.000    0.000 numbers.py:453(_add_)
       70    0.000    0.000    0.000    0.000 sdm.py:83(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       52    0.000    0.000    0.000    0.000 function.py:375(_eval_subs)
       98    0.000    0.000    0.000    0.000 boolalg.py:371(_eq_)
        5    0.000    0.000    0.000    0.000 repmatrix.py:144(_unify_element_sympy)
        1    0.000    0.000    0.000    0.000 evalf.py:1565(evalf)
       14    0.000    0.000    0.000    0.000 exponential.py:932(_eval_is_finite)
       92    0.000    0.000    0.000    0.000 logic.py:151(fuzzy_not)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:738(_unify_domain)
        8    0.000    0.000    0.000    0.000 trigonometric.py:294(fdiff)
       44    0.000    0.000    0.000    0.000 function.py:617(<genexpr>)
        3    0.000    0.000    0.000    0.000 matrixbase.py:2754(_add_)
       30    0.000    0.000    0.000    0.000 traversal.py:113(_init_)
       18    0.000    0.000    0.000    0.000 numbers.py:1837(_neg_)
        8    0.000    0.000    0.000    0.000 expr.py:220(_neg_)
       10    0.000    0.000    0.000    0.000 numbers.py:1927(_mod_)
       18    0.000    0.000    0.000    0.000 expr.py:261(_pow)
       56    0.000    0.000    0.000    0.000 numbers.py:2901(_abs_)
       18    0.000    0.000    0.000    0.000 function.py:1767(<genexpr>)
       41    0.000    0.000    0.000    0.000 symbol.py:413(_eval_subs)
       18    0.000    0.000    0.000    0.000 expr.py:266(_pow_)
       12    0.000    0.000    0.000    0.000 basic.py:1105(sympify_old)
       16    0.000    0.000    0.000    0.000 expr.py:231(_add_)
        2    0.000    0.000    0.000    0.000 function.py:1735(<genexpr>)
        2    0.000    0.000    0.000    0.000 matrixbase.py:1318(_eval_free_symbols)
       41    0.000    0.000    0.000    0.000 matrixbase.py:135(shape)
       18    0.000    0.000    0.000    0.000 function.py:1766(<genexpr>)
        4    0.000    0.000    0.000    0.000 _init_.py:673(update)
       14    0.000    0.000    0.000    0.000 mul.py:2141(_keep_coeff)
       18    0.000    0.000    0.000    0.000 numbers.py:3547(_eq_)
       20    0.000    0.000    0.000    0.000 trigonometric.py:533(_eval_is_extended_real)
        3    0.000    0.000    0.000    0.000 matrixbase.py:677(from_dok)
        4    0.000    0.000    0.001    0.000 repmatrix.py:359(_eval_scalar_mul)
       14    0.000    0.000    0.000    0.000 exponential.py:925(_eval_is_extended_real)
        1    0.000    0.000    0.000    0.000 matexpr.py:571(contract_one_dims)
        1    0.000    0.000    0.094    0.094 array_derivatives.py:81(_dispatch_eval_derivative_n_times)
       10    0.000    0.000    0.000    0.000 symbol.py:520(_hashable_content)
        6    0.000    0.000    0.000    0.000 sdm.py:1447(unop_dict)
       60    0.000    0.000    0.000    0.000 simplify.py:422(<lambda>)
       18    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
       78    0.000    0.000    0.000    0.000 <frozen collections_abc>:439(subclasshook_)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:765(unify)
        5    0.000    0.000    0.000    0.000 sdm.py:333(to_list_flat)
        4    0.000    0.000    0.000    0.000 _init.py:599(init_)
        1    0.000    0.000    0.097    0.097 matrixbase.py:3393(diff)
       23    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        2    0.000    0.000    0.000    0.000 expr.py:149(sort_key)
        5    0.000    0.000    0.000    0.000 domainmatrix.py:1603(_scalarmul)
        2    0.000    0.000    0.031    0.015 matrixbase.py:2488(<lambda>)
        1    0.000    0.000    0.000    0.000 numbers.py:1138(_Frel)
       12    0.000    0.000    0.000    0.000 basic.py:1115(sympify_new)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:1391(add)
        1    0.000    0.000    0.000    0.000 basic.py:447(sort_key)
        4    0.000    0.000    0.000    0.000 sdm.py:823(mul)
        3    0.000    0.000    0.126    0.042 matrixbase.py:2086(applyfunc)
        3    0.000    0.000    0.000    0.000 repmatrix.py:245(_eval_from_dok)
        3    0.000    0.000    0.000    0.000 basic.py:1386(has)
       15    0.000    0.000    0.000    0.000 trigonometric.py:894(_eval_is_extended_real)
        6    0.000    0.000    0.000    0.000 functools.py:841(dispatch)
       28    0.000    0.000    0.000    0.000 <frozen collections_abc>:345(subclasshook_)
        5    0.000    0.000    0.000    0.000 trigonometric.py:542(_eval_is_zero)
        3    0.000    0.000    0.000    0.000 sdm.py:854(add)
        3    0.000    0.000    0.000    0.000 repmatrix.py:242(_eval_todok)
        4    0.000    0.000    0.000    0.000 mul.py:190(_neg_)
        3    0.000    0.000    0.000    0.000 repmatrix.py:348(_eval_add)
        1    0.000    0.000    0.094    0.094 expr.py:3984(_eval_derivative_matrix_lines)
        6    0.000    0.000    0.000    0.000 functools.py:927(wrapper)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:1166(transpose)
        4    0.000    0.000    0.000    0.000 <frozen collections_abc>:292(subclasshook_)
        4    0.000    0.000    0.000    0.000 domainmatrix.py:1520(mul)
        1    0.000    0.000    0.097    0.097 array_derivatives.py:18(_new_)
        8    0.000    0.000    0.000    0.000 domainmatrix.py:552(to_sympy)
        4    0.000    0.000    0.001    0.000 numbers.py:1483(_truediv_)
        3    0.000    0.000    0.001    0.000 matrixbase.py:3042(_sub_)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:744(<lambda>)
        2    0.000    0.000    0.000    0.000 sdm.py:1460(sdm_transpose)
       15    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 evalf.py:1455(evalf)
        2    0.000    0.000    0.000    0.000 sdm.py:731(transpose)
        2    0.000    0.000    0.000    0.000 special.py:119(_new_)
        1    0.000    0.000    0.000    0.000 dense.py:59(as_immutable)
       19    0.000    0.000    0.000    0.000 repmatrix.py:186(<genexpr>)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:1334(_add_)
        2    0.000    0.000    0.000    0.000 matrixbase.py:1188(zeros)
       28    0.000    0.000    0.000    0.000 numbers.py:1418(_hashable_content)
        1    0.000    0.000    0.094    0.094 matexpr.py:531(_matrix_derivative)
        2    0.000    0.000    0.002    0.001 matrixbase.py:2407(<lambda>)
        1    0.000    0.000    0.094    0.094 matrixbase.py:3421(_eval_derivative)
        7    0.000    0.000    0.000    0.000 basic.py:135(_get_postprocessors)
        2    0.000    0.000    0.000    0.000 libmpf.py:291(from_man_exp)
        3    0.000    0.000    0.000    0.000 sdm.py:505(to_dok)
       50    0.000    0.000    0.000    0.000 traversal.py:163(_iter_)
        1    0.000    0.000    0.388    0.388 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 numbers.py:924(_new)
        2    0.000    0.000    0.000    0.000 repmatrix.py:249(_eval_values)
        1    0.000    0.000    0.000    0.000 matexpr.py:804(build)
        2    0.000    0.000    0.094    0.047 matrixbase.py:3422(<lambda>)
        8    0.000    0.000    0.000    0.000 sorting.py:191(<genexpr>)
        2    0.000    0.000    0.000    0.000 numbers.py:150(mpf_norm)
        6    0.000    0.000    0.000    0.000 matrixbase.py:5332(classof)
        1    0.000    0.000    0.031    0.031 matrixbase.py:2469(subs)
       10    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 libmpf.py:330(from_int)
        4    0.000    0.000    0.000    0.000 sdm.py:837(<lambda>)
        4    0.000    0.000    0.000    0.000 matrixbase.py:5305(_coerce_operand)
        6    0.000    0.000    0.000    0.000 weakref.py:414(_getitem_)
       17    0.000    0.000    0.000    0.000 expr.py:3570(as_coeff_Mul)
        4    0.000    0.000    0.000    0.000 basic.py:1139(<lambda>)
        1    0.000    0.000    0.000    0.000 numbers.py:1167(_gt_)
        4    0.000    0.000    0.001    0.000 matrixbase.py:2883(_neg_)
        1    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        1    0.000    0.000    0.000    0.000 basic.py:147(_get_postprocessors_for_type)
        4    0.000    0.000    0.001    0.000 numbers.py:498(_truediv_)
        4    0.000    0.000    0.000    0.000 <frozen collections_abc>:313(subclasshook_)
       10    0.000    0.000    0.000    0.000 expr.py:2154(as_content_primitive)
       29    0.000    0.000    0.000    0.000 boolalg.py:440(_bool_)
        1    0.000    0.000    0.000    0.000 matrixbase.py:3004(rmultiply)
        4    0.000    0.000    0.000    0.000 domainmatrix.py:1613(scalarmul)
        6    0.000    0.000    0.000    0.000 matrixbase.py:1319(<genexpr>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:363(_eval_scalar_rmul)
        1    0.000    0.000    0.000    0.000 libmpf.py:636(mpf_gt)
       10    0.000    0.000    0.000    0.000 integerring.py:54(_eq_)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:1377(_check)
        4    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)
        1    0.000    0.000    0.000    0.000 libmpf.py:64(dps_to_prec)
        2    0.000    0.000    0.000    0.000 assumptions.py:389(check_assumptions)
        1    0.000    0.000    0.000    0.000 intfunc.py:162(igcd)
        2    0.000    0.000    0.000    0.000 sdm.py:910(convert_to)
        2    0.000    0.000    0.000    0.000 dense.py:1078(zeros)
        3    0.000    0.000    0.000    0.000 matrixbase.py:664(todok)
        2    0.000    0.000    0.000    0.000 matexpr.py:81(_new_)
        4    0.000    0.000    0.000    0.000 {built-in method _operator.pos}
        1    0.000    0.000    0.000    0.000 matrixbase.py:3000(_rmul_)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:1059(to_dok)
        3    0.000    0.000    0.000    0.000 from_array_to_matrix.py:552(convert_array_to_matrix)
        2    0.000    0.000    0.000    0.000 function.py:1734(_subset)
        5    0.000    0.000    0.000    0.000 domainmatrix.py:882(to_list_flat)
        6    0.000    0.000    0.000    0.000 domainmatrix.py:745(<genexpr>)
        2    0.000    0.000    0.000    0.000 repmatrix.py:338(_eval_zeros)
        4    0.000    0.000    0.000    0.000 <frozen collections_abc>:392(subclasshook_)
        1    0.000    0.000    0.000    0.000 numbers.py:400(_eval_evalf)
        4    0.000    0.000    0.000    0.000 mul.py:831(as_coeff_mul)
        3    0.000    0.000    0.000    0.000 domainmatrix.py:747(_unify_fmt)
        6    0.000    0.000    0.000    0.000 sdm.py:559(iter_values)
        1    0.000    0.000    0.002    0.002 matrixbase.py:2375(replace)
        2    0.000    0.000    0.000    0.000 matexpr.py:236(_check_dim)
        2    0.000    0.000    0.000    0.000 matrixbase.py:1399(free_symbols)
        1    0.000    0.000    0.094    0.094 array_derivatives.py:62(_call_derive_matrix_by_scalar)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:3789(zeros)
        1    0.000    0.000    0.000    0.000 numbers.py:1318(_new_)
        7    0.000    0.000    0.000    0.000 matexpr.py:566(<genexpr>)
        2    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        2    0.000    0.000    0.000    0.000 {built-in method _operator.add}
        2    0.000    0.000    0.000    0.000 numbers.py:1973(_ge_)
        7    0.000    0.000    0.000    0.000 repmatrix.py:201(<genexpr>)
        2    0.000    0.000    0.000    0.000 repmatrix.py:307(_eval_transpose)
        1    0.000    0.000    0.000    0.000 matrixbase.py:5369(_unify_with_other)
        2    0.000    0.000    0.000    0.000 domain.py:717(unify)
        1    0.000    0.000    0.000    0.000 dense.py:65(as_mutable)
        2    0.000    0.000    0.000    0.000 repmatrix.py:252(_eval_iter_values)
        1    0.000    0.000    0.000    0.000 libmpf.py:574(mpf_cmp)
       17    0.000    0.000    0.000    0.000 expr.py:1021(_eval_power)
        1    0.000    0.000    0.000    0.000 numbers.py:1785(_as_mpf_val)
        2    0.000    0.000    0.000    0.000 basic.py:424(fromiter)
        4    0.000    0.000    0.000    0.000 domain.py:368(_hash_)
        2    0.000    0.000    0.000    0.000 matrixbase.py:1973(values)
        7    0.000    0.000    0.000    0.000 immutable.py:50(cols)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.round}
        2    0.000    0.000    0.000    0.000 basic.py:468(inner_key)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:1616(rscalarmul)
        2    0.000    0.000    0.000    0.000 matrixbase.py:2508(transpose)
        1    0.000    0.000    0.000    0.000 repmatrix.py:566(_new_)
        4    0.000    0.000    0.000    0.000 {function Counter.update at 0x0000016562B6E660}
        1    0.000    0.000    0.000    0.000 libmpf.py:884(python_mpf_mul)
        4    0.000    0.000    0.000    0.000 numbers.py:3423(_eq_)
        8    0.000    0.000    0.000    0.000 function.py:848(_diff_wrt)
        2    0.000    0.000    0.000    0.000 trigonometric.py:898(_eval_is_finite)
        5    0.000    0.000    0.000    0.000 immutable.py:54(rows)
        1    0.000    0.000    0.000    0.000 basic.py:149(<genexpr>)
        2    0.000    0.000    0.000    0.000 sdm.py:668(zeros)
        1    0.000    0.000    0.000    0.000 immutable.py:15(sympify_matrix)
        1    0.000    0.000    0.000    0.000 utilities.py:51(_get_intermediate_simp_bool)
        3    0.000    0.000    0.000    0.000 matexpr.py:560(_get_shape)
        3    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        8    0.000    0.000    0.000    0.000 expr.py:2514(could_extract_minus_sign)
        2    0.000    0.000    0.000    0.000 domainmatrix.py:1104(iter_values)
        2    0.000    0.000    0.000    0.000 matrixbase.py:2543(T)
        1    0.000    0.000    0.000    0.000 matexpr.py:565(get_rank)
        1    0.000    0.000    0.000    0.000 libmpf.py:692(mpf_sign)
        1    0.000    0.000    0.000    0.000 evalf.py:490(evalf_integer)
        2    0.000    0.000    0.000    0.000 integerring.py:69(from_sympy)
        3    0.000    0.000    0.000    0.000 matexpr.py:792(_build)
        3    0.000    0.000    0.000    0.000 basic.py:442(class_key)
        1    0.000    0.000    0.000    0.000 numbers.py:1982(_le_)
        1    0.000    0.000    0.000    0.000 repmatrix.py:236(flat)
        7    0.000    0.000    0.000    0.000 basic.py:1288(_eval_subs)
        2    0.000    0.000    0.000    0.000 integerring.py:61(_hash_)
        1    0.000    0.000    0.000    0.000 utilities.py:30(_get_intermediate_simp)
        2    0.000    0.000    0.000    0.000 matrixbase.py:3681(_len_)
        1    0.000    0.000    0.000    0.000 repmatrix.py:53(_eq_)
        1    0.000    0.000    0.000    0.000 matexpr.py:753(_init_)
        1    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 numbers.py:1999(_eval_is_odd)
        2    0.000    0.000    0.000    0.000 numbers.py:2905(_neg_)
        6    0.000    0.000    0.000    0.000 basic.py:2260(doit)
        4    0.000    0.000    0.000    0.000 expr.py:217(_pos_)
        1    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        1    0.000    0.000    0.000    0.000 basic.py:938(_sorted_args)
        1    0.000    0.000    0.000    0.000 lagrange.py:506(forcelist)
        3    0.000    0.000    0.000    0.000 from_array_to_matrix.py:193(_array2matrix)
        1    0.000    0.000    0.000    0.000 immutable.py:58(shape)
        2    0.000    0.000    0.000    0.000 lagrange.py:494(q)
        3    0.000    0.000    0.000    0.000 from_array_to_matrix.py:344(_remove_trivial_dims)
